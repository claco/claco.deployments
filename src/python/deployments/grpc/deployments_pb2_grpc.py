# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import deployments_pb2 as deployments__pb2


class DeploymentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDeployment = channel.unary_unary(
                '/claco.deployments.DeploymentsService/CreateDeployment',
                request_serializer=deployments__pb2.CreateDeploymentRequest.SerializeToString,
                response_deserializer=deployments__pb2.CreateDeploymentResponse.FromString,
                )
        self.DeleteDeployment = channel.unary_unary(
                '/claco.deployments.DeploymentsService/DeleteDeployment',
                request_serializer=deployments__pb2.DeleteDeploymentRequest.SerializeToString,
                response_deserializer=deployments__pb2.DeleteDeploymentResponse.FromString,
                )
        self.QueueDeployment = channel.unary_unary(
                '/claco.deployments.DeploymentsService/QueueDeployment',
                request_serializer=deployments__pb2.QueueDeploymentRequest.SerializeToString,
                response_deserializer=deployments__pb2.QueueDeploymentResponse.FromString,
                )


class DeploymentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueueDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeploymentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDeployment,
                    request_deserializer=deployments__pb2.CreateDeploymentRequest.FromString,
                    response_serializer=deployments__pb2.CreateDeploymentResponse.SerializeToString,
            ),
            'DeleteDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDeployment,
                    request_deserializer=deployments__pb2.DeleteDeploymentRequest.FromString,
                    response_serializer=deployments__pb2.DeleteDeploymentResponse.SerializeToString,
            ),
            'QueueDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.QueueDeployment,
                    request_deserializer=deployments__pb2.QueueDeploymentRequest.FromString,
                    response_serializer=deployments__pb2.QueueDeploymentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'claco.deployments.DeploymentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeploymentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/claco.deployments.DeploymentsService/CreateDeployment',
            deployments__pb2.CreateDeploymentRequest.SerializeToString,
            deployments__pb2.CreateDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/claco.deployments.DeploymentsService/DeleteDeployment',
            deployments__pb2.DeleteDeploymentRequest.SerializeToString,
            deployments__pb2.DeleteDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueueDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/claco.deployments.DeploymentsService/QueueDeployment',
            deployments__pb2.QueueDeploymentRequest.SerializeToString,
            deployments__pb2.QueueDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
